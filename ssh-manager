#!/bin/bash

CONFIG_DIR="$HOME/.config/ssh-manager"
CONFIG_FILE="$CONFIG_DIR/config"

# Ensure config directory and file exist
mkdir -p "$CONFIG_DIR"
touch "$CONFIG_FILE"

# Function to connect to an SSH endpoint
connect_endpoint() {
    endpoint=$(cat "$CONFIG_FILE" | fzf --prompt="Select an alias or endpoint to connect: " | cut -d'|' -f2)

    if [ -z "$endpoint" ]; then
        echo "No endpoint selected."
        return
    fi

    echo "Connecting to $endpoint..."
    ssh "$endpoint"
}

# Function to add a new SSH endpoint
add_endpoint() {
    read -p "Enter username: " username
    read -p "Enter domain: " domain
    read -p "Enter an alias for this connection: " alias

    endpoint="$username@$domain"

    # Check if alias or endpoint already exists
    if grep -E "^$alias\|" "$CONFIG_FILE" || grep -E "\|$endpoint$" "$CONFIG_FILE"; then
        echo "Alias or endpoint already exists!"
        return
    fi

    # Add the endpoint to config
    echo "$alias|$endpoint" >> "$CONFIG_FILE"
    echo "Endpoint added successfully!"

    # Ask if user wants to connect immediately
    read -p "Do you want to connect now? (y/n): " connect_now
    if [[ "$connect_now" =~ ^[Yy]$ ]]; then
        echo "Connecting to $endpoint..."
        ssh "$endpoint"
    else
        echo "ðŸ”¹ You can connect later using the SSH manager."
    fi
}

# Function to delete an SSH endpoint
delete_endpoint() {
    selection=$(cat "$CONFIG_FILE" | fzf --prompt="Select an alias or endpoint to delete: ")

    if [ -z "$selection" ]; then
        echo "No endpoint selected."
        return
    fi

    sed -i "/^$selection$/d" "$CONFIG_FILE"
    echo "Endpoint deleted: $selection"
}

# Menu options
echo "SSH Manager"
echo "1) Connect to an SSH Endpoint"
echo "2) Add a New SSH Endpoint"
echo "3) Delete an SSH Endpoint"
echo "4) Exit"
read -p "Select an option: " choice

case "$choice" in
    1) connect_endpoint ;;
    2) add_endpoint ;;
    3) delete_endpoint ;;
    4) exit 0 ;;
    *) echo "Invalid option!" ;;
esac
