#!/bin/bash
CONFIG_DIR="$HOME/.config/ssh-manager"
CONFIG_FILE="$CONFIG_DIR/config"

# Ensure config directory and file exist
mkdir -p "$CONFIG_DIR"
touch "$CONFIG_FILE"

# Function to connect to an SSH endpoint
connect_endpoint() {
    endpoint=$(echo "$1" | cut -d'|' -f2)
    port=$(echo "$1" | cut -d'|' -f3)
    echo "Connecting to $endpoint${port:+ on port $port}..."
    if [ -n "$port" ]; then
        ssh -p "$port" "$endpoint"
    else
        ssh "$endpoint"  # Default port 22
    fi
}

# Function to add a new SSH endpoint
add_endpoint() {
    read -p "Enter username: " username
    read -p "Enter domain: " domain
    read -p "Enter port (leave blank for default 22): " port
    read -p "Enter an alias for this connection: " alias
    endpoint="$username@$domain"
    
    # Check if alias or endpoint already exists
    if grep -E "^$alias\|" "$CONFIG_FILE" || grep -E "\|$endpoint\|" "$CONFIG_FILE"; then
        echo "Alias or endpoint already exists!"
        return
    fi
    
    # Add the endpoint to config
    echo "$alias|$endpoint|$port" >> "$CONFIG_FILE"
    echo "Endpoint added successfully!"
    
    # Ask if user wants to connect immediately
    read -p "Do you want to connect now? (y/n): " connect_now
    if [[ "$connect_now" =~ ^[Yy]$ ]]; then
        echo "Connecting to $endpoint${port:+ on port $port}..."
        if [ -n "$port" ]; then
            ssh -p "$port" "$endpoint"
        else
            ssh "$endpoint"
        fi
    else
        echo "ðŸ”¹ You can connect later using the SSH manager."
    fi
}

# Function to delete an SSH endpoint
delete_endpoint() {
    selection=$(cat "$CONFIG_FILE" | fzf --prompt="Select an alias or endpoint to delete: ")
    if [ -z "$selection" ]; then
        echo "No endpoint selected."
        return
    fi
    
    # Extract the alias part for deletion
    alias=$(echo "$selection" | cut -d'|' -f1)
    sed -i "/^$alias\|/d" "$CONFIG_FILE"
    echo "Endpoint deleted: $selection"
}

# Create a file with existing connections plus option to add/delete
create_selection_list() {
    temp_file=$(mktemp)
    
    # Add connections from config file
    if [ -s "$CONFIG_FILE" ]; then
        while IFS='|' read -r alias endpoint port; do
            if [ -n "$alias" ]; then
                echo "$alias|$endpoint|${port:-22}" >> "$temp_file"
            fi
        done < "$CONFIG_FILE"
    fi
    
    # Add special options
    echo "[+] Add new endpoint" >> "$temp_file"
    echo "[-] Delete an endpoint" >> "$temp_file"
    
    echo "$temp_file"
}

# Main logic
main() {
    temp_list=$(create_selection_list)
    selection=$(cat "$temp_list" | fzf --prompt="Select a connection or action: ")
    rm "$temp_list"
    
    if [ -z "$selection" ]; then
        echo "No selection made."
        exit 0
    fi
    
    if [ "$selection" = "[+] Add new endpoint" ]; then
        add_endpoint
    elif [ "$selection" = "[-] Delete an endpoint" ]; then
        delete_endpoint
    else
        connect_endpoint "$selection"
    fi
}

# Run the program
main
